---
- name: Install bottle python package
  ansible.builtin.pip:
    name: kubernetes
    state: present
  become: yes

- name: Create JupyterHub namespace
  kubernetes.core.k8s:
    name: "{{ jupyterhub_namespace }}"
    api_version: v1
    kind: Namespace
    state: present
  become_user: "{{ ansible_user }}"

- name: Create a plusai.is A record
  community.general.cloudflare_dns:
    zone: plusai.is
    record: jhub-test
    type: A
    value: "{{ ansible_host }}"
    api_token: "{{ cloudflare_api_token }}"

- name: Create Cloudflare API token secret
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: cloudflare-api-token-secret
        namespace: "{{ certmanager_namespace }}"
      type: Opaque
      stringData:
        api-token: "{{ cloudflare_api_token }}"
  become_user: "{{ ansible_user }}"
  when: cloudflare_api_token is defined

- name: Create ClusterIssuer for Let's Encrypt
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: cert-manager.io/v1
      kind: ClusterIssuer
      metadata:
        name: letsencrypt-issuer
      spec:
        acme:
          server: https://acme-v02.api.letsencrypt.org/directory
          email: "{{ letsencrypt_email }}"
          privateKeySecretRef:
            name: letsencrypt-dns01
          solvers:
          - selector:
              dnsZones:
                - plusai.is
            dns01:
              cloudflare:
                email: "{{ cloudflare_email }}"
                apiTokenSecretRef:
                  name: cloudflare-api-token-secret
                  key: api-token
  become_user: "{{ ansible_user }}"

- name: Create JupyterHub values file
  template:
    src: jupyterhub-values.yml.j2
    dest: /tmp/jupyterhub-values.yml
    mode: '0644'

- name: Deploy JupyterHub using Helm
  kubernetes.core.helm:
    name: jupyterhub
    chart_ref: jupyterhub/jupyterhub
    release_namespace: "{{ jupyterhub_namespace }}"
    create_namespace: yes
    chart_version: "{{ jupyterhub_chart_version }}"
    values_files:
      - /tmp/jupyterhub-values.yml
    wait: true
    wait_timeout: 10m
  become_user: "{{ ansible_user }}"

- name: Clean up temporary values file
  file:
    path: /tmp/jupyterhub-values.yml
    state: absent